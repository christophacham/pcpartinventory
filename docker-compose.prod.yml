# Production Docker Compose Configuration
# Uses published images from GitHub Container Registry
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

version: '3.8'

services:
  backend:
    image: ghcr.io/raul/pcpartinventory/backend:latest
    environment:
      RUST_LOG: info
      RUST_BACKTRACE: 0
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    image: ghcr.io/raul/pcpartinventory/frontend:latest
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: pc_inventory
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password

  redis:
    restart: unless-stopped
    volumes:
      - redis_data:/data

secrets:
  postgres_password:
    external: true

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local